Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/perdto/test2/component/Project1/Storage1.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var Storage1 = function (_Component) {
  babelHelpers.inherits(Storage1, _Component);

  function Storage1() {
    babelHelpers.classCallCheck(this, Storage1);
    return babelHelpers.possibleConstructorReturn(this, (Storage1.__proto__ || Object.getPrototypeOf(Storage1)).apply(this, arguments));
  }

  babelHelpers.createClass(Storage1, [{
    key: 'fetchusers',
    value: function fetchusers() {
      var _this2 = this;

      fetch('http://test4.perdto.com/api/getMenu/').then(function (response) {
        return response.json();
      }).then(function (response) {
        var navigate = _this2.props.navigation.navigate;

        var data = JSON.stringify(response);
        try {
          _reactNative.AsyncStorage.setItem('info', data);

          navigate('listview');
        } catch (error) {}
      });
    }
  }, {
    key: 'render',
    value: function render() {

      this.fetchusers();

      return _react2.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 48
          }
        },
        'loading'
      );
    }
  }]);
  return Storage1;
}(_react.Component);

exports.default = Storage1;


_reactNative.AppRegistry.registerComponent('test2', function () {
  return test2;
});