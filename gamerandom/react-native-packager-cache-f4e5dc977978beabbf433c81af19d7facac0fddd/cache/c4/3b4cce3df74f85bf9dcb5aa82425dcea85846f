Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/perdto/test2/component/Project2/Testflatlist.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var ds = new _reactNative.ListView.DataSource({ rowHasChanged: function rowHasChanged(row1, row2) {
        return row1 != row2;
    } });

var Testflatlist = function (_Component) {
    babelHelpers.inherits(Testflatlist, _Component);

    function Testflatlist() {
        babelHelpers.classCallCheck(this, Testflatlist);

        var _this = babelHelpers.possibleConstructorReturn(this, (Testflatlist.__proto__ || Object.getPrototypeOf(Testflatlist)).call(this));

        _this.state = {
            dataSource: ds.cloneWithRows(['hay', 'text'])
        };
        return _this;
    }

    babelHelpers.createClass(Testflatlist, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: { flex: 1 }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 17
                    }
                },
                _react2.default.createElement(_reactNative.StatusBar, { hidden: true, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 18
                    }
                }),
                _react2.default.createElement(_reactNative.ListView, {
                    dataSource: this.state.dataSource,
                    renderRow: function renderRow(rowData) {
                        return _react2.default.createElement(
                            _reactNative.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 22
                                }
                            },
                            rowData
                        );
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 19
                    }
                })
            );
        }
    }]);
    return Testflatlist;
}(_react.Component);

exports.default = Testflatlist;


_reactNative.AppRegistry.registerComponent('Testflatlist', function () {
    return Testflatlist;
});